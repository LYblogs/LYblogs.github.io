{"meta":{"title":"LYblogs","subtitle":null,"description":"一位勤劳的富侨小技师","author":"LY","url":"http://yoursite.com"},"pages":[{"title":"ALL_tags","date":"2018-12-21T03:53:04.000Z","updated":"2018-12-21T08:33:32.769Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"ALL_Class","date":"2018-12-21T03:53:04.000Z","updated":"2018-12-21T08:33:13.047Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-12-21T08:21:35.000Z","updated":"2018-12-21T08:21:35.766Z","comments":true,"path":"categories/index-1.html","permalink":"http://yoursite.com/categories/index-1.html","excerpt":"","text":""}],"posts":[{"title":"Window下配置MySQL","slug":"Windows下配置MySQL","date":"2018-12-27T05:16:55.000Z","updated":"2018-12-27T05:35:24.371Z","comments":true,"path":"2018/12/27/Windows下配置MySQL/","link":"","permalink":"http://yoursite.com/2018/12/27/Windows下配置MySQL/","excerpt":"Windows下配置本地MySQL","text":"Windows下配置本地MySQL 第一步 第二步 第三步 第四步 第五步 第六步 第七步 第八步 第九步 第十步","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yoursite.com/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yoursite.com/tags/MySQL/"}]},{"title":"SQL","slug":"SQL基础","date":"2018-12-24T12:29:36.000Z","updated":"2018-12-24T13:01:23.431Z","comments":true,"path":"2018/12/24/SQL基础/","link":"","permalink":"http://yoursite.com/2018/12/24/SQL基础/","excerpt":"","text":"SQL (结构化查询语言) 分为三组: 1.DDL (数据定义语言): creat(创建)drop(删除)alter（修改） 2.DML (数据操作语言): INSERT(增加数据)DELETE(删除数据)UPDATE(修改数据)SELECT(查找/提出数据) 3.DCL (数据控制语言): GRANTREVOKECOMMITROLLBACK 创建名为srs的数据库1CREATE DATABASE srs DEFAULT charset utf8; -- 默认为Latin1 - iso-8859-1 切换到srs数据库1use srs; 创建二维表来承载数据 如果存在名为tb_student的表就删除它1drop table if EXISTS tb_student 创建学生表tb_student 在学生表中学号可以唯一的标记一条学生记录，我们通常称这样的列为主键列（PRIMARY key）123456789CREATE TABLE tb_student (stuid INT not null COMMENT &quot;学号&quot;,-- 非空约束stuname VARCHAR(10) NOT NULL COMMENT &quot;姓名&quot;, -- 限定最长字符stusex bit DEFAULT 1 COMMENT &quot;性别&quot;, -- bit(比特类型)只能是0|1 (默认为1)stubirth date COMMENT &quot;出生日期&quot;,stuaddr VARCHAR(255) COMMENT &quot;家庭住址&quot;,PRIMARY KEY (stuid)); 修改学生表添加联系方式列1alter TABLE tb_student ADD COLUMN stutel CHAR(11); -- 定长字符串 修改学生表删除联系方式列1ALTER TABLE tb_student DROP COLUMN stutel; 向学生表插入数据123456INSERT INTO tb_student VALUES (1001, &apos;李毅&apos;, 1, &apos;1997-04-28&apos;,&apos;四川成都&apos;);INSERT INTO tb_student VALUES (1002, &apos;王大锤&apos;, 1, &apos;1995-4-8&apos;,&apos;重庆&apos;);INSERT INTO tb_student VALUES (1003, &apos;王小锤&apos;, 1, &apos;1995-4-8&apos;,&apos;重庆&apos;);INSERT INTO tb_student VALUES (1004, &apos;锤锤&apos;, 1, &apos;1997-5-8&apos;,&apos;广州&apos;),(1005, &apos;王老锤&apos;, 1, &apos;1977-4-8&apos;,&apos;北京&apos;),(1006, &apos;白客&apos;, 0, &apos;1988-4-8&apos;,&apos;重庆&apos;); 删除学号在1003到1005之间的学生数据1234DELETE from tb_student WHERE stuid&gt;=1003 and stuid&lt;=1005;DELETE from tb_student WHERE stuid IN (1003,1004,1005);DELETE from tb_student WHERE stuid BETWEEN 1003 and 1005;-- TRUNCATE TABLE tb_student; 截断表（慎用，删库跑路咯！） 更新学号为1002和1004的两个学生的生日123update tb_student set stubirth=&apos;1990-1-1&apos; WHERE stuid=1002 OR stuid=1004;UPDATE tb_student SET stuaddr=NULL WHERE stuid=1004 OR stuid=1005; 更新学号为1002的学生的名字、性别、家庭住址123UPDATE tb_student SET stuname=&apos;王小美&apos;,stusex=0,stuaddr=&apos;四川自贡&apos; WHERE stuid=1002;UPDATE tb_student SET stuaddr=&apos;湖南长沙&apos; WHERE stuaddr is null; 筛选12SELECT * FROM tb_studentSELECT * FROM tb_student WHERE stusex=0; 投影12SELECT stuname,stubirth FROM tb_student;SELECT stuname,stubirth FROM tb_student WHERE stusex=0; 补充: crash course (快速上手)best practice (最佳实践)","categories":[{"name":"SQL基础","slug":"SQL基础","permalink":"http://yoursite.com/categories/SQL基础/"}],"tags":[{"name":"SQL","slug":"SQL","permalink":"http://yoursite.com/tags/SQL/"}]},{"title":"数据库","slug":"数据库基础","date":"2018-12-24T01:48:36.000Z","updated":"2018-12-25T13:05:31.754Z","comments":true,"path":"2018/12/24/数据库基础/","link":"","permalink":"http://yoursite.com/2018/12/24/数据库基础/","excerpt":"","text":"数据库 - 实现项目中的数据持久化 数据库的类别: 关系型数据库 - MySQL 特点: 理论基础: 集合论的关系代数 用二维表来组织数据(行 (记录) 和列(字段) ) SQL - 结构化查询语言( Structured query language ) 关系型数据库产品: Oracle - （甲骨文公司） MySQL - （甲骨文公司） - MariaDB DB2、SQLServer、postgreSQL、SQLite 关系型数据库可以保证数据的完整性:1.实体完整性:每条记录都是独一无二的没有冗余 - 主键/唯一索引2.参考完整性(引用完整性):外键3.域完整性: 数据类型、非空约束、默认值约束、检查约束 NoSQL数据库 - Redis MongoDB - 文档数据库 - 适合量大但是价值低的数据 Redis - KV数据库 - 性能好适合做项目中的高速缓存服务 Elasticsearch - 搜索引擎 Linux安装软件 包管理工具 - yum / rpm Docker - 提供虚拟化服务，创建虚拟化容器并按照软件 安装指令:yum -y install docker-io卸载指令:yum -y install docker-io查看指令:yum info …搜索指令:yum search查看是否安装:yum list installed | grep docker Docker服务 启动:systemctl start docker暂停：systemctl stop docker重启:systemctl restart docker查看服务器状态:systemctl status docker开机自启:systemctl enable docker禁用开机自启:systemctl disable docker 使用Docker命令1. 查看已经下载好的镜像文件(安装包):1docker imgaes 2. 下载MySQL的镜像文件:1docker pull mysql:5.7 MySQL数据库超级管理员账号 - root Oracle数据库超级管理员账号 - sys SQLServer数据库超级管理员账号 - sa 3. 创建并运行容器1docker run -d -p 3306:3306 --name mysql57 -e MYSQL_ROOT_PASSWORD=123456 mysql:5.7 4. 查看运行中的程序1docker ps 5.安装MySQL客户端工具: Navicat for my SQL - 猫 SQLyog - 海豚 Toad for MySQL - 蛤蟆","categories":[{"name":"数据库基础","slug":"数据库基础","permalink":"http://yoursite.com/categories/数据库基础/"}],"tags":[{"name":"基础","slug":"基础","permalink":"http://yoursite.com/tags/基础/"},{"name":"数据库","slug":"数据库","permalink":"http://yoursite.com/tags/数据库/"}]},{"title":"Hello hexo","slug":"你好，hexo","date":"2018-12-18T15:21:36.000Z","updated":"2018-12-21T08:45:15.068Z","comments":true,"path":"2018/12/18/你好，hexo/","link":"","permalink":"http://yoursite.com/2018/12/18/你好，hexo/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start你好吗？百度","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start你好吗？百度","categories":[{"name":"初识hexo","slug":"初识hexo","permalink":"http://yoursite.com/categories/初识hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"基础","slug":"基础","permalink":"http://yoursite.com/tags/基础/"}]}]}